name: helm lint

on:
  push:
    branches:
      - master

jobs:
  lint-and-publish:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Fetch history
        run: git fetch --prune --unshallow
      - uses: azure/setup-helm@v1
      - name: lint
        run: |
          helm lint .
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          echo "::set-env name=version::$(grep 'version:' Chart.yaml| awk '{print $2}')"
      - name: Package the chart
        run: |
          helm package . --destination .release-packages --dependency-update
          release_notes=`sed -n '/^## \['v${{ env.version }}'\]/,/^## /p' CHANGELOG.md | sed -n '/^- /p'`
          echo "RELEASE NOTES: $release_notes"
          echo "$release_notes" > body.md
          release_name=`echo "$release_notes"| head -1 | sed 's/^- //'`
          echo "::set-env name=release_name::$release_name"
      - name: Make the release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.version }}
          release_name: ${{ env.release_name }}
          body_path: body.md
      - name: upload release artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./.release-packages/puppetserver-${{ env.version }}.tgz
          asset_name: puppetserver-${{ env.version }}.tgz
          asset_content_type: application/gzip
